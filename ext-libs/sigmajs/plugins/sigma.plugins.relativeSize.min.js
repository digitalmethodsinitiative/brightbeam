(function() {
    'use strict';

    if (typeof sigma === 'undefined')
        throw 'sigma is not declared';

    sigma.utils.pkg('sigma.plugins');

    var _id = 0,
        _cache = {};

    /**
     * This function will change size for all nodes depending to their degree
     *
     * @param  {sigma}   s       		The related sigma instance.
     * @param  {object}  initialSize 	Start size property
     */
    sigma.plugins.relativeSize = function(s, maxSize, minSize=null) {
        var nodes = s.graph.nodes();
        var maxDegree = 0;

        if(minSize === null) {
            minSize = 0.1 * maxSize;
        }

        // second create size for every node
        for(var i = 0; i < nodes.length; i++) {
            maxDegree = Math.max(maxDegree, s.graph.degree(nodes[i].id, 'in'));
        }


        for(var i = 0; i < nodes.length; i++) {
            let factor = s.graph.degree(nodes[i].id, 'in');
            if(factor == 0) {
                factor = 1;
            }
            nodes[i].size = maxSize * (factor / maxDegree);
        }
        s.refresh();
    };
}).call(window);